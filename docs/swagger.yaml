definitions:
  handlers.ProjectInput:
    properties:
      description:
        type: string
      manager_id:
        type: integer
      title:
        type: string
    type: object
  handlers.TaskInput:
    properties:
      description:
        type: string
      priority:
        type: string
      project_id:
        type: integer
      responsible_user_id:
        type: integer
      status:
        type: string
      title:
        type: string
    type: object
  handlers.UserInput:
    properties:
      email:
        type: string
      name:
        type: string
      role:
        type: string
    type: object
  models.PriorityEnum:
    enum:
    - low
    - medium
    - high
    type: string
    x-enum-varnames:
    - Low
    - Medium
    - High
  models.Project:
    properties:
      completion_date:
        type: string
      creation_date:
        type: string
      description:
        type: string
      id:
        type: integer
      manager_id:
        type: integer
      title:
        type: string
    type: object
  models.StatusEnum:
    enum:
    - new
    - in_progress
    - done
    type: string
    x-enum-varnames:
    - New
    - InProgress
    - Done
  models.Task:
    properties:
      completion_date:
        type: string
      creation_date:
        type: string
      description:
        type: string
      id:
        type: integer
      priority:
        $ref: '#/definitions/models.PriorityEnum'
      project_id:
        type: integer
      responsible_user_id:
        type: integer
      status:
        $ref: '#/definitions/models.StatusEnum'
      title:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      registration_date:
        type: string
      role:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is project management service API
  title: Project Management Service API
paths:
  /projects:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Project'
            type: array
        "404":
          description: No projects found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get all projects
      tags:
      - projects
    post:
      consumes:
      - application/json
      parameters:
      - description: Project information
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/handlers.ProjectInput'
      produces:
      - application/json
      responses:
        "201":
          description: Project created
          schema:
            type: string
        "400":
          description: Could not decode project
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create a project
      tags:
      - projects
  /projects/{id}:
    delete:
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Project deleted
          schema:
            type: string
        "404":
          description: Project not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete a project
      tags:
      - projects
    get:
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Project'
        "404":
          description: Project not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get project by ID
      tags:
      - projects
    put:
      consumes:
      - application/json
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      - description: Project information
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/handlers.ProjectInput'
      produces:
      - application/json
      responses:
        "200":
          description: Project updated
          schema:
            type: string
        "400":
          description: Could not decode project
          schema:
            type: string
        "404":
          description: Project not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update a project
      tags:
      - projects
  /projects/{id}/tasks:
    get:
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Task'
            type: array
        "404":
          description: No tasks found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get all tasks for a project
      tags:
      - projects
  /projects/search:
    get:
      parameters:
      - description: Project title
        in: query
        name: title
        type: string
      - description: Project manager ID
        in: query
        name: manager
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Project'
            type: array
        "400":
          description: Invalid search parameters
          schema:
            type: string
        "404":
          description: No projects found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Search projects
      tags:
      - projects
  /tasks:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Task'
            type: array
        "404":
          description: No tasks found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get all tasks
      tags:
      - tasks
    post:
      consumes:
      - application/json
      parameters:
      - description: Task
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/handlers.TaskInput'
      produces:
      - application/json
      responses:
        "201":
          description: Task created
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create a task
      tags:
      - tasks
  /tasks/{id}:
    delete:
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Task deleted
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "404":
          description: Task not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete a task
      tags:
      - tasks
    get:
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Task'
        "404":
          description: Task not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get a task by ID
      tags:
      - tasks
    put:
      consumes:
      - application/json
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: Task
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/handlers.TaskInput'
      produces:
      - application/json
      responses:
        "200":
          description: Task updated
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "404":
          description: Task not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update a task
      tags:
      - tasks
  /tasks/search:
    get:
      parameters:
      - description: Task title
        in: query
        name: title
        type: string
      - description: Task status
        in: query
        name: status
        type: string
      - description: Task priority
        in: query
        name: priority
        type: string
      - description: Task assignee
        in: query
        name: assignee
        type: string
      - description: Task project
        in: query
        name: project
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Task'
            type: array
        "400":
          description: No search parameters provided
          schema:
            type: string
        "404":
          description: No tasks found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Search tasks
      tags:
      - tasks
  /users:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "404":
          description: No users found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.UserInput'
      produces:
      - application/json
      responses:
        "201":
          description: User created
          schema:
            type: string
        "400":
          description: Missing required fields
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create user
      tags:
      - users
  /users/{id}:
    delete:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: User deleted
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete user
      tags:
      - users
    get:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: User not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get user by id
      tags:
      - users
    put:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.UserInput'
      produces:
      - application/json
      responses:
        "200":
          description: User updated
          schema:
            type: string
        "400":
          description: Missing required fields
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update user
      tags:
      - users
  /users/{id}/tasks:
    get:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Task'
            type: array
        "404":
          description: No tasks found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get user tasks
      tags:
      - users
  /users/search:
    get:
      parameters:
      - description: User email
        in: query
        name: email
        type: string
      - description: User name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "400":
          description: Missing email or name parameter
          schema:
            type: string
        "404":
          description: No users found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Search user
      tags:
      - users
swagger: "2.0"
